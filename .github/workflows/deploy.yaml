# --------------------Example 1: 1 Job--------------------#

# name: Deploy Session 2

# on: push

# jobs:
#   first-deploy-session2:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Hola Mundo
#         run: echo "Hola mundo"

# --------------------Example 2: two Jobs-----------------#

# name: Second Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Hola Mundo
#         run: echo "Hola mundo"

#   second-job:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Hola Mundo segundo
#         run: echo "Hola mundo segundo"

# --------------------Example 3: needs -----------------#
# Se emplea para generar dependencias, de manera que el segundo job se ejecuta después del primer job

# name: Third Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Hola Mundo
#         run: echo "Hola mundo"

#   second-job:
#     needs: first-job
#     runs-on: ubuntu-latest
#     steps:
#       - name: Hola Mundo segundo
#         run: echo "Hola mundo segundo"

# --------------------Example 4: if + context -----------------#
# If se emplea para generar condicionales, context se usa para acceder a lo que está sucediendo en el workflow

# name: Fourth Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Hola Mundo
#         run: echo "Hola mundo"

#   second-job:
#     if: ${{ github.ref == 'refs/heads/main'}} # En este caso, para que el contexto sea main
#     needs: first-job
#     runs-on: ubuntu-latest
#     steps:
#       - name: Hola Mundo segundo
#         run: echo "Hola mundo segundo"

# --------------------Example 5: env -----------------#
# Se emplea para generar variables de entorno

# name: Fifth Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest

#     env: #Definir variables de entorno
#       NAME: CodigoFacilito

#     steps:
#       - name: Hola Mundo
#         run: echo "Hola mundo $NAME"

#   second-job:
#     needs: first-job
#     runs-on: ubuntu-latest

#     steps:
#       - name: Hola Mundo segundo
#         run: echo "Hola mundo segundo"

# --------------------Example 6: Steps & actions -----------------#
# Action se ejecuta a nivel de steps

# name: Sixth Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest

#     env:
#       NAME: CodigoFacilito

#     steps:
#       - name: Working dir
#         run: ls -la

#       - name: Action
#         uses: actions/checkout@v4

#       - name: Working dir after action
#         run: ls -la

#   second-job:
#     needs: first-job
#     runs-on: ubuntu-latest

#     steps:
#       - name: Hola Mundo segundo
#         run: echo "Hola mundo segundo {{github.ref}}"

# --------------------Example 7: $GITHUB_OUTPUT -----------------#
# Variable de entorno

# name: Seventh Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest

#     env:
#       NAME: CodigoFacilito

#     steps:
#       - name: Visualizando path
#         run: echo $GITHUB_OUTPUT

#   second-job:
#     needs: first-job
#     runs-on: ubuntu-latest

#     steps:
#       - name: Hola Mundo segundo
#         run: echo "Hola mundo segundo {{github.ref}}"

# --------------------Example 8: Compartir información entre steps -----------------#

# name: Eighth Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Working dir
#         id: step_1
#         run: echo "my_variable=Hola Mundo" >> $GITHUB_OUTPUT

#       - name: Obtener mensaje
#         run: echo "${{ steps.step_1.outputs.my_variable }}"

#   second-job:
#     needs: first-job
#     runs-on: ubuntu-latest

#     steps:
#       - name: Hola Mundo segundo
#         run: echo "Hola mundo segundo ${{ github.ref }}"
# --------------------Example 9: Compartir información entre jobs -----------------#

# name: ninth Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest

#     outputs:
#       salida: ${{ steps.step_1.outputs.my_variable }}

#     steps:
#       - name: Working dir
#         id: step_1
#         run: echo "my_variable=Hola Mundo" >> $GITHUB_OUTPUT

#       - name: Obtener mensaje
#         run: echo "${{ steps.step_1.outputs.my_variable }}"

#   second-job:
#     needs: first-job
#     runs-on: ubuntu-latest

#     env:
#       SALIDA: ${{ needs.first-job.outputs.salida }}

#     steps:
#       - name: Hola Mundo segundo
#         run: echo "$SALIDA"

# --------------------Example 10: Generar artefacto -----------------#

# name: Tenth Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest

#     outputs:
#       salida: ${{ steps.step_1.outputs.my_variable }}

#     steps:
#       - name: Generando archivo
#         run: |
#           echo "Archivo prueba, hola" >> test.log

#       - name: Subir artefacto
#         uses: actions/upload-artifact@v4
#         with:
#           name: archivo-text
#           path: test.log

# --------------------Example 11: Pasar artefacto de un job a otro-----------------#

# name: Eleventh Deploy Session 2

# on: push

# jobs:
#   first-job:
#     runs-on: ubuntu-latest

#     outputs:
#       salida: ${{ steps.step_1.outputs.my_variable }}

#     steps:
#       - name: Generando archivo
#         run: |
#           echo "Archivo prueba, hola" >> test.log

#       - name: Subir artefacto
#         uses: actions/upload-artifact@v4
#         with:
#           name: archivo-text
#           path: test.log

#   second-job:
#     runs-on: ubuntu-latest
#     needs: first-job

#     steps:
#       - name: Descargar artefacto
#         uses: actions/download-artifact@v4
#         with:
#           name: archivo-text

#       - name: Cat file
#         run: cat test.log


# --------------------Example 12: Strategy & matrix-----------------#

name: Twelfth Deploy Session 2

on: push

jobs:
  first-job:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        message: ["Hola", "DevJuan", "GitHub Actions"]
        message2: [1, 2]

    steps:
      - name: Print message
        run: echo "${{ matrix.message }} with ${{ matrix.message2 }}"